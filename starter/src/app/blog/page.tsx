import type { NextPage } from "next";
import Head from "next/head";
import React from "react";
import BlogItem, { BlogProps } from "../../components/BlogItem";
import PageTitle from "../../components/PageTitle";
import { BlogFilters } from "@/components/BlogFilters";

interface Query {
  q: string;
  category_like: string;
}
interface QueryProps {
  query: Query;
}

async function fetchData({ query }: QueryProps) {
  let url = `http://localhost:5001/blogs?`;

  if (query.q) {
    url += `q=${query.q}`;
  }

  if (query.category_like) {
    if (query.q) {
      url += `&category_like=${query.category_like}`;
    } else {
      url += `category_like=${query.category_like}`;
    }
  }

  const res = await fetch(url);
  const blogData = await res.json();

  return blogData;
}
export default async function Blog({
  searchParams,
}: {
  searchParams: { q: string; category_like: string };
}) {
  const blogData = await fetchData({ query: searchParams });
  return (
    <>
      <Head>
        <title>Store - Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <PageTitle title={"Blog"} />

      <section className="bg0 p-t-62 p-b-60">
        <div className="container">
          <div className="row">
            <div className="col-md-8 col-lg-9 p-b-80">
              <div className="p-r-45 p-r-0-lg">
                {/* blog item */}
                {blogData.length > 0 ? (
                  <BlogItem blogProps={blogData} />
                ) : (
                  <p>There are no results with your search.</p>
                )}
              </div>
            </div>
            <BlogFilters />
          </div>
        </div>
      </section>
    </>
  );
}
