import { ProductFilters } from "@/components/ProductFilters";
import ProductItem, { ProductProps } from "@/components/ProductItem";
import type { NextPage } from "next";
import Head from "next/head";

interface Query {
  q: string;
  gender_like: string;
}
interface QueryProps {
  query: Query;
}

async function fetchData({ query }: QueryProps) {
  let url = `http://localhost:5001/products?`;

  if (query.q) {
    url += `q=${query.q}`;
  }

  if (query.gender_like) {
    if (query.q) {
      url += `&gender_like=${query.gender_like}`;
    } else {
      url += `gender_like=${query.gender_like}`;
    }
  }

  const res = await fetch(url);
  const data = await res.json();

  return data;
}

export default async function Shop({
  searchParams,
}: {
  searchParams: { q: string; gender_like: string };
}) {
  const productData = await fetchData({ query: searchParams });

  return (
    <>
      <Head>
        <title>Store</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="bg0 m-t-23 p-b-140">
        <div className="container">
          <ProductFilters />
          <div className="row isotope-grid">
            <ProductItem productItems={productData} />
          </div>
          <div className="flex-l-m flex-w w-full p-t-10 m-lr--7">
            <a
              href="#"
              className="flex-c-m how-pagination1 trans-04 m-all-7 active-pagination1"
            >
              1
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              2
            </a>

            <a href="#" className="flex-c-m how-pagination1 trans-04 m-all-7">
              3
            </a>
          </div>
        </div>
      </div>
    </>
  );
}
